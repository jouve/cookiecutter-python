[tool.poetry]
name = "{{ cookiecutter.directory_name }}"
version = "0.1.0"
description = ""
authors = ["{{ cookiecutter.author }}"]

[tool.poetry.scripts]
{{ cookiecutter.directory_name }} = '{{ cookiecutter.directory_name }}:main'

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
{% if cookiecutter.httpx -%}
httpx = "*"
{%- endif %}
{% if cookiecutter.sqlalchemy -%}
sqlalchemy = "*"
{{ cookiecutter.sqlalchemy }} = "*"
{%- endif %}
{% if cookiecutter.yaml -%}
PyYAML = "*"
{%- endif %}

[tool.poetry.dev-dependencies]
bandit = {extras = ["toml"], version = "*"}
black = "*"
flake8-bugbear = "*"
flake8-comprehensions = "*"
ipython = "*"
isort = "*"
mypy = "*"
pylint = "*"
pytest = "*"
Sphinx = "*"
unify = "*"
{% if cookiecutter.yaml -%}
types-PyYAML = "*"
{%- endif %}

[tool.bandit.assert_used]
skips = [
    "./tests/*.py"
]

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.isort]
combine_as_imports = true
line_length = 120
profile = "black"

[tool.pylint.basic]
good-names = "_,df,ex,f,i,j,k,l,Run"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.master]
recursive = "yes"

[tool.pylint.messages_control]
disable = [
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
